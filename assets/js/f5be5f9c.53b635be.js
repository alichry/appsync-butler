"use strict";(self.webpackChunkappsync_butler_website=self.webpackChunkappsync_butler_website||[]).push([[2049],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,k=c["".concat(o,".").concat(m)]||c[m]||u[m]||l;return r?n.createElement(k,i(i({ref:t},d),{},{components:r})):n.createElement(k,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7437:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return d},default:function(){return c}});var n=r(7462),a=r(3366),l=(r(7294),r(3905)),i=["components"],p={id:"appsync_butler_core.Reader",title:"Class: Reader",sidebar_label:"Reader",custom_edit_url:null},o=void 0,s={unversionedId:"api/classes/appsync_butler_core.Reader",id:"api/classes/appsync_butler_core.Reader",title:"Class: Reader",description:"@appsync-butler/core.Reader",source:"@site/docs/api/classes/appsync_butler_core.Reader.md",sourceDirName:"api/classes",slug:"/api/classes/appsync_butler_core.Reader",permalink:"/appsync-butler/docs/api/classes/appsync_butler_core.Reader",editUrl:null,tags:[],version:"current",frontMatter:{id:"appsync_butler_core.Reader",title:"Class: Reader",sidebar_label:"Reader",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"PipelineValidationError",permalink:"/appsync-butler/docs/api/classes/appsync_butler_core.PipelineValidationError"},next:{title:"UndefinedVariableError",permalink:"/appsync-butler/docs/api/classes/appsync_butler_core.UndefinedVariableError"}},d=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"readFunctions",id:"readfunctions",children:[{value:"Returns",id:"returns",children:[],level:4}],level:3},{value:"readTypes",id:"readtypes",children:[{value:"Returns",id:"returns-1",children:[],level:4}],level:3},{value:"readFields",id:"readfields",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4}],level:3},{value:"readResolver",id:"readresolver",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4}],level:3},{value:"readFunction",id:"readfunction",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4}],level:3}],level:2}],u={toc:d};function c(e){var t=e.components,r=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/modules/appsync_butler_core"},"@appsync-butler/core"),".Reader"),(0,l.kt)("p",null,"Resolver and function reader."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { Reader } from '@appsync-butler/core';\nconst reader = new Reader();\nreader.readTypes(); // ['Query', 'Mutation', 'Post']\nreader.readFields('Query'); // ['getPost', 'getAuthor']\nconst resolver = reader.readResolver('Query', 'getPost');\n\nreader.readFunctions(); // ['getPostById', 'getAuthorByPostId']\nconst func = reader.readFunction('getPostById');\n")),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Reader"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/classes/appsync_butler_core.Parser"},(0,l.kt)("inlineCode",{parentName:"a"},"Parser"))))),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new Reader"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"optionsOrRoot?"),")"),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"optionsOrRoot")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.ReaderOptions"},(0,l.kt)("inlineCode",{parentName:"a"},"ReaderOptions"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Path to VTL directory or reading directives")))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"readfunctions"},"readFunctions"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readFunctions"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"Reads the on-disk function directory names. Essentially, the\nfirst-level subdirectories of ",(0,l.kt)("inlineCode",{parentName:"p"},"functions")," are read."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tree"},"vtl\n\u251c\u2500\u2500 functions\n\u2502   \u2514\u2500\u2500 GetPostById\n\u2502       \u251c\u2500\u2500 request.vtl\n\u2502       \u2514\u2500\u2500 response.vtl\n\u2514\u2500\u2500 resolvers\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"reader.readFunctions(); // ['GetPostById']\n")),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"A list of function names"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"readtypes"},"readTypes"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readTypes"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"Reads the on-disk GraphQL type names. Essentially, the\nfirst-level subdirectories of ",(0,l.kt)("inlineCode",{parentName:"p"},"resolvers")," are read."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tree"},"vtl\n\u251c\u2500\u2500 functions\n\u2514\u2500\u2500 resolvers\n    \u251c\u2500\u2500 Mutation\n    \u2514\u2500\u2500 Query\n    \u2514\u2500\u2500 Post\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"reader.readTypes(); // ['Mutation', 'Query', 'Post']\n")),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"A list of GraphQL types"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"readfields"},"readFields"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readFields"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"typeName"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"Reads the on-disk GraphQL field names. Essentially, the\nsecond-level subdirectories of ",(0,l.kt)("inlineCode",{parentName:"p"},"resolvers")," are read."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tree"},"vtl\n\u251c\u2500\u2500 functions\n\u2514\u2500\u2500 resolvers\n    \u251c\u2500\u2500 Mutation\n    \u2514\u2500\u2500 Query\n        \u2514\u2500\u2500 getPost\n            \u251c\u2500\u2500 request.vtl\n            \u2514\u2500\u2500 response.vtl\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"reader.readFields('Query'); // ['getPost']\n")),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"typeName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"GraphQL type name")))),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,l.kt)("p",null,"A list of GraphQL fields"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"readresolver"},"readResolver"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readResolver"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"typeName"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"fieldName"),"): ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/modules/appsync_butler_core#resolverinfo"},(0,l.kt)("inlineCode",{parentName:"a"},"ResolverInfo"))),(0,l.kt)("p",null,"Reads a GraphQL field resolver from disk."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"typeName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"GraphQL type name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"fieldName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"GraphQL field name")))),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/modules/appsync_butler_core#resolverinfo"},(0,l.kt)("inlineCode",{parentName:"a"},"ResolverInfo"))),(0,l.kt)("p",null,"Unit or Pipeline Resolver information"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"readfunction"},"readFunction"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"readFunction"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"functionName"),"): ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.FunctionInfo"},(0,l.kt)("inlineCode",{parentName:"a"},"FunctionInfo"))),(0,l.kt)("p",null,"Reads an AWS AppSync Function from disk."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"functionName")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"Function name")))),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.FunctionInfo"},(0,l.kt)("inlineCode",{parentName:"a"},"FunctionInfo"))),(0,l.kt)("p",null,"Function information"))}c.isMDXComponent=!0}}]);