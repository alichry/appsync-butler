"use strict";(self.webpackChunkappsync_butler_website=self.webpackChunkappsync_butler_website||[]).push([[6903],{5537:(e,n,t)=>{t.d(n,{A:()=>S});var r=t(6540),s=t(8215),i=t(5627),l=t(6347),a=t(372),o=t(604),c=t(1861),d=t(8749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const s=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=p(e),[l,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,u]=f({queryString:t,groupId:s}),[v,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,d.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),m=(()=>{const e=c??v;return h({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{m&&o(m)}),[m]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),x(e)}),[u,x,i]),tabValues:i}}var x=t(9136);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:l,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),s=a[t].value;s!==r&&(c(n),l(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...i,className:(0,s.A)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:i}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function g(e){const n=v(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",m.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(y,{...n,...e})]})}function S(e){const n=(0,x.A)();return(0,j.jsx)(g,{...e,children:u(e.children)},String(n))}},8189:(e,n,t)=>{t.r(n),t.d(n,{Row:()=>c,assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"intro","title":"Introduction","description":"With the power of Apache Velocity, AWS AppSync allows for quick deployment of GraphQL APIs. Stored AppSync VTL resolvers require manual instructions","source":"@site/docs/intro.mdx","sourceDirName":".","slug":"/intro","permalink":"/appsync-butler/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/alichry/appsync-butler/edit/master/website/docs/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Installation","permalink":"/appsync-butler/docs/getting-started/installation"}}');var s=t(4848),i=t(8453);t(5537),t(9329);const l={sidebar_position:1},a="Introduction",o={},c=({children:e})=>(0,s.jsx)("div",{className:"container",children:(0,s.jsx)("div",{className:"row",children:e})}),d=[{value:"\ud83d\ude80\xa0 Features",id:"-features",level:2},{value:"\ud83e\udd14\xa0 How it works",id:"-how-it-works",level:2},{value:"\u2728\xa0 Tabular representation",id:"-tabular-representation",level:3},{value:"\ud83e\udd16\xa0 Functions",id:"-functions",level:3},{value:"\ud83e\udde0\xa0 Resolvers",id:"-resolvers",level:3},{value:"Unit resolver files",id:"unit-resolver-files",level:4},{value:"Pipeline resolver files",id:"pipeline-resolver-files",level:4},{value:"\u1d61\xa0 Variables",id:"\u1d61-variables",level:3},{value:"\ud83d\udd2e\xa0 Data Sources",id:"-data-sources",level:3},{value:"\ud83c\udfaf\xa0 Who&#39;s this for",id:"-whos-this-for",level:2},{value:"\ud83d\ude98\xa0 Forthcoming features",id:"-forthcoming-features",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n","\n","\n",(0,s.jsxs)(n.p,{children:["With the power of Apache Velocity, ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/appsync/",children:"AWS AppSync"})," allows for quick deployment of ",(0,s.jsx)(n.a,{href:"https://graphql.org/",children:"GraphQL"})," APIs. Stored AppSync VTL resolvers require manual instructions\nto associate it with a GraphQL field. For this, AppSync Butler offers a simple development framework to parse and load VTL resolvers into CDK or SST AppSync constructs by leveraging an intuitive directory structure."]}),"\n",(0,s.jsx)(n.h2,{id:"-features",children:"\ud83d\ude80\xa0 Features"}),"\n",(0,s.jsx)(n.p,{children:"\u2728\xa0 Simple and intuitive. AppSync Butler is an open and humble framework."}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udc89\xa0 Variable injection. Define global variables for replacement in AppSync mapping templates."}),"\n",(0,s.jsx)(n.p,{children:"\ud83e\udd84\xa0 Bind resolvers to data sources from within request mapping templates."}),"\n",(0,s.jsxs)(n.p,{children:["\ud83e\udd5e\xa0 Comaptible with AWS ",(0,s.jsx)(n.strong,{children:"Cloud Development Kit"})," and ",(0,s.jsx)(n.strong,{children:"Serverless Stack Toolkit"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"-how-it-works",children:"\ud83e\udd14\xa0 How it works"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["If you're unfamiliar with AWS AppSync, head over to the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/appsync/latest/devguide/what-is-appsync.html",children:"AWS AppSync Docs"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"With the below GraphQL schema and directory structure, AppSync Butler maps each AppSync Resolver to its corresponding GraphQL field."}),"\n",(0,s.jsxs)(c,{children:[(0,s.jsx)("div",{className:"col col--6",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-graphql",children:"schema {\n    query: Query\n    mutation: Mutation\n}\n\ntype Query {\n    getPost(id: ID!): Post\n}\n\ntype Mutation {\n    addPost(post: PostInput!): Post!\n}\n\ntype Post {\n    id: ID!\n    author: Author!\n    title: String!\n    content: String!\n}\n\ntype Author {\n    id: ID!\n    username: String!\n}\n"})})}),(0,s.jsx)("div",{className:"col col--6",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tree",children:"vtl\n\u251c\u2500\u2500 functions\n\u2502\xa0\xa0 \u251c\u2500\u2500 GetAuthorByAuthorId\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 description.txt\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 request.vtl\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 response.vtl\n\u2502\xa0\xa0 \u2514\u2500\u2500 GetAuthorIdByPostId\n\u2502\xa0\xa0     \u251c\u2500\u2500 description.txt\n\u2502\xa0\xa0     \u251c\u2500\u2500 request.vtl\n\u2502\xa0\xa0     \u2514\u2500\u2500 response.vtl\n\u2514\u2500\u2500 resolvers\n    \u251c\u2500\u2500 Mutation\n    \u2502\xa0\xa0 \u2514\u2500\u2500 addPost\n    \u2502\xa0\xa0     \u251c\u2500\u2500 request.vtl\n    \u2502\xa0\xa0     \u2514\u2500\u2500 response.vtl\n    \u251c\u2500\u2500 Post\n    \u2502\xa0\xa0 \u2514\u2500\u2500 author\n    \u2502\xa0\xa0     \u251c\u2500\u2500 after.vtl\n    \u2502\xa0\xa0     \u251c\u2500\u2500 before.vtl\n    \u2502\xa0\xa0     \u2514\u2500\u2500 pipeline.seq\n    \u2514\u2500\u2500 Query\n        \u2514\u2500\u2500 getPost\n            \u251c\u2500\u2500 request.vtl\n            \u2514\u2500\u2500 response.vtl\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"-tabular-representation",children:"\u2728\xa0 Tabular representation"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Resolver"}),(0,s.jsx)(n.th,{children:"Resolver Type"}),(0,s.jsx)(n.th,{children:"GraphQL Type"}),(0,s.jsx)(n.th,{children:"GraphQL Field"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"vtl/resolvers/Query/getPost"}),(0,s.jsx)(n.td,{children:"Unit"}),(0,s.jsx)(n.td,{children:"Query"}),(0,s.jsx)(n.td,{children:"getPost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"vtl/resolvers/Mutation/addPost"}),(0,s.jsx)(n.td,{children:"Unit"}),(0,s.jsx)(n.td,{children:"Mutation"}),(0,s.jsx)(n.td,{children:"addPost"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"vtl/resolvers/Post/author"}),(0,s.jsx)(n.td,{children:"Pipeline"}),(0,s.jsx)(n.td,{children:"Post"}),(0,s.jsx)(n.td,{children:"author"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"-functions",children:"\ud83e\udd16\xa0 Functions"}),"\n",(0,s.jsxs)(n.p,{children:["Each subdirectory under ",(0,s.jsx)(n.code,{children:"vtl/functions/"})," should contain the necessary files to build an AppSync VTL function:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Request Mapping Template: ",(0,s.jsx)(n.code,{children:"request.vtl"})]}),"\n",(0,s.jsxs)(n.li,{children:["Response Mapping Template: ",(0,s.jsx)(n.code,{children:"response.vtl"})]}),"\n",(0,s.jsxs)(n.li,{children:["Description (optional): ",(0,s.jsx)(n.code,{children:"description.txt"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"When loading functions, AppSync Butler iterates over each function and adds it to the supplied CDK or SST AppSync construct."}),"\n",(0,s.jsx)(n.h3,{id:"-resolvers",children:"\ud83e\udde0\xa0 Resolvers"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["AppSync Butler supports both ",(0,s.jsx)(n.strong,{children:"unit"})," and ",(0,s.jsx)(n.strong,{children:"pipeline"})," resolvers."]})}),"\n",(0,s.jsxs)(n.p,{children:["Each subdirectory under ",(0,s.jsx)(n.code,{children:"vtl/resolvers/"})," should represent a valid GraphQL type (e.g. ",(0,s.jsx)(n.code,{children:"vtl/resolvers/Query"}),") and contains zero-or-more subdirectories as field-level resolvers (e.g. ",(0,s.jsx)(n.code,{children:"vtl/resolver/Query/getPost"}),"). AppSync Butler reads the VTL files in ",(0,s.jsx)(n.code,{children:"vtl/resolver/Query/getPost"})," and adds the ",(0,s.jsx)(n.code,{children:"Query.getPost"})," resolver to the GraphQL API construct."]}),"\n",(0,s.jsx)(n.h4,{id:"unit-resolver-files",children:"Unit resolver files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Request Mapping Template: ",(0,s.jsx)(n.code,{children:"request.vtl"})]}),"\n",(0,s.jsxs)(n.li,{children:["Response Mapping Template: ",(0,s.jsx)(n.code,{children:"response.vtl"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"pipeline-resolver-files",children:"Pipeline resolver files"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Before Mapping Template (optional): ",(0,s.jsx)(n.code,{children:"before.vtl"})]}),"\n",(0,s.jsxs)(n.li,{children:["Pipeline sequence definition file: ",(0,s.jsx)(n.code,{children:"pipeline.seq"})]}),"\n",(0,s.jsxs)(n.li,{children:["After Mapping Template (optional): ",(0,s.jsx)(n.code,{children:"after.vtl"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The pipeline sequence defintion file denotes the ordered AppSync VTL functions to execute sequentially using newline-delimitted function names. To execute ",(0,s.jsx)(n.code,{children:"vtl/functions/GetUserId"})," and ",(0,s.jsx)(n.code,{children:"vtl/functions/GetUser"}),", we can define the pipeline sequence defintion file in the following format:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GetUserId\nGetUser\n"})}),"\n",(0,s.jsx)(n.p,{children:"AppSync Butler handles the necessary steps to load this pipeline resolver into AppSync."}),"\n",(0,s.jsx)(n.h3,{id:"\u1d61-variables",children:"\u1d61\xa0 Variables"}),"\n",(0,s.jsxs)(n.p,{children:["AppSync Butler parses mapping templates (request, response, before, after) and\nreplaces references of a user-defined variable to its specified value.\nVariables are denoted as ",(0,s.jsx)(n.code,{children:"{{ var }}"}),". Variables are defined during the\n",(0,s.jsx)(n.a,{href:"/docs/api/@appsync-butler/core/classes/Loader",children:"instantialization of a loader"})," or set using\n",(0,s.jsx)(n.a,{href:"/docs/api/@appsync-butler/core/classes/Parser#setvariable",children:(0,s.jsx)(n.code,{children:"loader.builder.parser.setVariable(key, value)"})})]}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["AppSync Butler throws an ",(0,s.jsx)(n.a,{href:"/docs/api/@appsync-butler/core/classes/UndefinedVariableError",children:(0,s.jsx)(n.code,{children:"UndefinedVariableError"})})," if an unrecognized\nvariable is encountered in a mapping template."]})}),"\n",(0,s.jsx)(n.h3,{id:"-data-sources",children:"\ud83d\udd2e\xa0 Data Sources"}),"\n",(0,s.jsx)(n.p,{children:"Data sources are provided during instantialization and specified directly from\nwith-in request mapping templates."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="/vtl/resolvers/Query/getPost/request.vtl" {1}',children:'##@butler.dataSource(\'myDynamoDbDataSource\')\n\n{\n    "version": "...",\n    "operation": "GetItem",\n    "key": { ... }\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Alternatively, the default data source can be provided during instantialization.\nThis is highly suitable for Single Table design applications where setting the\ndata source is not necessary."})}),"\n",(0,s.jsx)(n.h2,{id:"-whos-this-for",children:"\ud83c\udfaf\xa0 Who's this for"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Developers utilizing AWS CDK or SST to deploy a GraphQL API."}),"\n",(0,s.jsx)(n.li,{children:"Entrepreneurs leveraging AWS AppSync to define their business logic\nand require a simplistic AppSync development framework with a\nsmooth learning curve."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"As an entrepreneur that is heavily relying on AWS AppSync, it is highly cruicial\nto employ Infrastructure-as-Code tools such as AWS Cloud Development Kit or Serverless\nStack Toolkit to define your stack as it boosts your product value."})}),"\n",(0,s.jsx)(n.h2,{id:"-forthcoming-features",children:"\ud83d\ude98\xa0 Forthcoming features"}),"\n",(0,s.jsxs)(n.p,{children:["To support us, give this project a star on ",(0,s.jsx)(n.a,{href:"https://github.com/alichry/appsync-butler",children:"GitHub"}),". Here's a list of future objectives that are still under consideration:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provide a, programmable, resolver testing mechanism through deploying a test stack and executing GraphQL\noperations against it. Alternatively, simulating VTL templates yields a zero-cost test suite."}),"\n",(0,s.jsx)(n.li,{children:"VTL validation prior deployment. This would cut-down time spent in errorus deployments."}),"\n",(0,s.jsx)(n.li,{children:"Access properties of other data sources (e.g. a DynamoDB's table name) instead of relying\non defined variables."}),"\n",(0,s.jsx)(n.li,{children:"Possibly warn users of any missing resolvers for any GraphQL fields."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(6540);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>l});t(6540);var r=t(8215);const s={tabItem:"tabItem_Ymn6"};var i=t(4848);function l(e){let{children:n,hidden:t,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,l),hidden:t,children:n})}}}]);