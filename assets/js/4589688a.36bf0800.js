"use strict";(self.webpackChunkappsync_butler_website=self.webpackChunkappsync_butler_website||[]).push([[4954],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),s=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||l;return t?n.createElement(f,o(o({ref:r},c),{},{components:t})):n.createElement(f,o({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5313:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var n=t(7462),a=t(3366),l=(t(7294),t(3905)),o=["components"],i={id:"appsync_butler_core.Builder",title:"Class: Builder",sidebar_label:"Builder",custom_edit_url:null},p=void 0,s={unversionedId:"api/classes/appsync_butler_core.Builder",id:"api/classes/appsync_butler_core.Builder",title:"Class: Builder",description:"@appsync-butler/core.Builder",source:"@site/docs/api/classes/appsync_butler_core.Builder.md",sourceDirName:"api/classes",slug:"/api/classes/appsync_butler_core.Builder",permalink:"/appsync-butler/docs/api/classes/appsync_butler_core.Builder",editUrl:null,tags:[],version:"current",frontMatter:{id:"appsync_butler_core.Builder",title:"Class: Builder",sidebar_label:"Builder",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"ResolverType",permalink:"/appsync-butler/docs/api/enums/appsync_butler_core.ResolverType"},next:{title:"DataSourceNotFoundError",permalink:"/appsync-butler/docs/api/classes/appsync_butler_core.DataSourceNotFoundError"}},c=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"parser",id:"parser",children:[],level:3},{value:"resolvers",id:"resolvers",children:[],level:3},{value:"functions",id:"functions",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"build",id:"build",children:[{value:"Returns",id:"returns",children:[],level:4}],level:3}],level:2}],u={toc:c};function d(e){var r=e.components,t=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/modules/appsync_butler_core"},"@appsync-butler/core"),".Builder"),(0,l.kt)("p",null,"Build a resolver tree from a VTL directory."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { Builder } from '@appsync-butler/core';\nconst builder = new Builder();\nbuilder.build();\nconst { getPost } = builder.resolvers.Query;\nconst { getUserById } = builder.functions;\n")),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new Builder"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"optionsOrRoot?"),")"),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"optionsOrRoot?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.ParserOptions"},(0,l.kt)("inlineCode",{parentName:"a"},"ParserOptions"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"Path to VTL directory or parsing instructions")))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"parser"},"parser"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"parser"),": ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/classes/appsync_butler_core.Parser"},(0,l.kt)("inlineCode",{parentName:"a"},"Parser"))),(0,l.kt)("p",null,"The underlying parser instance that is responsible for parsing\nresolvers and functions."),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"resolvers"},"resolvers"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"resolvers"),": ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.ResolverTree"},(0,l.kt)("inlineCode",{parentName:"a"},"ResolverTree"))),(0,l.kt)("p",null,"The resolver tree object, only populated after calling ",(0,l.kt)("inlineCode",{parentName:"p"},"build()")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"functions"},"functions"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,l.kt)("strong",{parentName:"p"},"functions"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,l.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,l.kt)("a",{parentName:"p",href:"/appsync-butler/docs/api/interfaces/appsync_butler_core.ParsedFunctionInfo"},(0,l.kt)("inlineCode",{parentName:"a"},"ParsedFunctionInfo")),">"),(0,l.kt)("p",null,"The function dictionary object, only populated after calling ",(0,l.kt)("inlineCode",{parentName:"p"},"build()"),"\nKeys are function names and values are parsed function information."),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"build"},"build"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"build"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Traverse all the stored resolvers and functions to\nbuild the resolver tree and function dictionary."),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")))}d.isMDXComponent=!0}}]);